name: Deploy to Lambda

on:
  push:
    branches: [ master ]         # run on your master branch

permissions:
  id-token: write                # needed for OIDC
  contents: read

env:
  AWS_REGION: us-east-2          # the region where redCouch_LamdaFunction lives

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣  Pull the code
    - uses: actions/checkout@v4

    # 2️⃣  Get short-lived AWS creds via OIDC
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    # 3️⃣  Build a deployment zip (code + deps)
    - name: Package Lambda code
      run: |
        set -euo pipefail
        rm -rf build && mkdir -p build

        # copy Python sources (adjust path if your code lives elsewhere)
        if ls *.py >/dev/null 2>&1; then
          cp -v *.py build/
        fi

        # always build wheels compatible with Lambda (AL2, Python 3.12, x86_64)
        if [ -s requirements.txt ]; then
          pip install -r requirements.txt \
              --platform manylinux_2_17_x86_64
              --python-version 3.11 \
              --only-binary=:all: \
              --upgrade -t build
        fi

        cd build
        zip -r ../function.zip .

    

    # 4️⃣  Upload the new code
    - name: Update Lambda code
      run: |
        aws lambda update-function-code \
          --function-name redCouch_LamdaFunction \
          --zip-file fileb://function.zip \
          --region $AWS_REGION

    # 5️⃣  Wait until the code update finishes (avoids ResourceConflictException)
    - name: Wait until code update is finished
      run: |
        aws lambda wait function-updated \
          --function-name redCouch_LamdaFunction \
          --region $AWS_REGION

    # 6️⃣  Inject DB connection secrets as environment variables
    - name: Update Lambda environment variables
      run: |
        aws lambda update-function-configuration \
          --function-name redCouch_LamdaFunction \
          --environment "Variables={DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_USER=${{ secrets.DB_USER }},DB_PASS=${{ secrets.DB_PASS }},DB_NAME=${{ secrets.DB_NAME }}}" \
          --region $AWS_REGION


